makeContent({
"content" : "<div id='total-introduce' class='content-wrapper'><h2>关于naiveUI</h2><p>naiveUI是一套常用的组件和特效库，适用于PC端，配合naiveUI.css使用，<br>作者是一个naive&fresh coder，在学习前端的过程遇到了组件复用的需求，因此萌生了自己写一个组件库(瞎搞)的想法——带着练手的目的和一点小梦想（求star）<br>由于时间关系，展示页面完成的十分仓储，后续（看心情）会进行升级。兼容性方面仅在chrome56版本，firefox51版本上进行了测试（）<br>最渴望得到的是各位的建议：damoshen@163.com</p><h2>关于naiveUI中的组件</h2><p>对于部分组件，使用了一个'占位元素'：placerHolderNode的概念<br>大部分的组件都是以这样的方式生成：传入一个placerHolderNode，然后在这个placerHolderNode里面生成一个组件<br>使用“占位元素”主要是基于3点考虑:</p><ul><li>简化API：通常的组件需要传入一个配置参数，包含width,height等等属性，而使用占位元素的话，只需要传入占位元素就行</li><li>便于调整样式：组件的尺寸等都是基于占位元素的百分比，若需要调整，直接改变占位元素的css代码即可，不需在js代码中修改配置对象</li><li>方便布局：对占位元素进行布局即可</li></ul><pre><code><span>naiveUI.createCalendar(placerHolderNode,handler)</span></code></pre><h2>关于naiveUI中的效果</h2><p>对于大部分效果，采取返回一个操作接口对象的方法来进行，在这个对象中，有一些方法可供调用<br>例如：setEffect——开始某种效果，clearEffect——取消某种效果</p><pre><code>var a = naiveUI.dragable(dragPart,dragNode)<br>a.setDrag() //设置拖曳<br>a.clearDrag() //取消拖曳效果</code></pre><h2>Todo</h2><ul><li>增加更多的组件与效果：栅格，表单...</li><li>扩展到移动端</li><li>兼容到IE9</li><li>提供多种样式供选择</li><li>升级展示页面</li></ul></div>"
})